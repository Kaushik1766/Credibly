"use strict";(()=>{var t={};t.id=8428,t.ids=[8428],t.modules={20399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},44840:(t,e,i)=>{i.r(e),i.d(e,{originalPathname:()=>te,patchFetch:()=>ti,requestAsyncStorage:()=>Y,routeModule:()=>Q,serverHooks:()=>tt,staticGenerationAsyncStorage:()=>Z});var a={};i.r(a),i.d(a,{POST:()=>X});var n=i(73278),r=i(45002),o=i(54877),s=i(71309),u=class extends Error{constructor(t,e,i){super(t),this.statusCode=e,this.details=i,this.name="PinataError"}},c=class extends u{constructor(t,e,i){super(t,e,i),this.name="NetworkError"}},h=class extends u{constructor(t,e,i){super(t,e,i),this.name="AuthenticationError"}},p=class extends u{constructor(t,e){super(t,void 0,e),this.name="ValidationError"}},d=async t=>{let e;if(!t)throw new p("Pinata configuration is missing");let i="https://api.pinata.cloud";t.endpointUrl&&(i=t.endpointUrl),e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/testAuthentication"};try{let t=await fetch(`${i}/data/testAuthentication`,{method:"GET",headers:e});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing authentication: ${t.message}`);throw new u("An unknown error occurred while testing authentication")}},l=async(t,e,i)=>{let a;if(!t)throw new p("Pinata configuration is missing");let n=i?.keys||t.pinataJwt,r=new FormData;r.append("file",e,e.name),r.append("name",i?.metadata?.name||e.name||"File from SDK"),i?.groupId&&r.append("group_id",i.groupId),a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/file"};let o="https://uploads.pinata.cloud/v3";t.uploadUrl&&(o=t.uploadUrl);try{let t=await fetch(`${o}/files`,{method:"POST",headers:a,body:r});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error uploading file: ${t.message}`);throw new u("An unknown error occurred while uploading the file")}},w=async(t,e,i)=>{let a;if(!t)throw new p("Pinata configuration is missing");let n=i?.keys||t?.pinataJwt,r=i?.metadata?.name?i?.metadata?.name:"base64 string",o=new Blob([Buffer.from(e,"base64")]),s=new FormData;s.append("file",o,r),s.append("name",r),i?.groupId&&s.append("group_id",i.groupId),a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/base64"};let d="https://uploads.pinata.cloud/v3";t.uploadUrl&&(d=t.uploadUrl);try{let t=await fetch(`${d}/files`,{method:"POST",headers:a,body:s});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing base64: ${t.message}`);throw new u("An unknown error occurred while trying to upload base64")}},f=async(t,e,i)=>{let a;if(!t)throw new p("Pinata configuration is missing");let n=i?.keys||t?.pinataJwt,r=new FormData,o=await fetch(e);if(!o.ok){let t=await o.text();throw new c(`HTTP error: ${t}`,o.status,t)}let s=new Blob([await o.arrayBuffer()]),d=i?.metadata?.name??"url_upload",l=new File([s],d);r.append("file",l,d),r.append("name",d),i?.groupId&&r.append("group_id",i.groupId),a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/url"};let w="https://uploads.pinata.cloud/v3";t.uploadUrl&&(w=t.uploadUrl);try{let t=await fetch(`${w}/files`,{method:"POST",headers:a,body:r});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing url: ${t.message}`);throw new u("An unknown error occurred while uploading by url")}},g=async(t,e,i)=>{let a;if(!t)throw new p("Pinata configuration is missing");let n=i?.keys||t?.pinataJwt,r=new File([new Blob([JSON.stringify(e)])],"data.json",{type:"application/json"}),o=new FormData;o.append("file",r,r.name),o.append("name",i?.metadata?.name||r.name||"File from SDK"),i?.groupId&&o.append("group_id",i.groupId),a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${n}`,...t.customHeaders}:{Authorization:`Bearer ${n}`,Source:"sdk/json"};let s="https://uploads.pinata.cloud/v3";t.uploadUrl&&(s=t.uploadUrl);try{let t=await fetch(`${s}/files`,{method:"POST",headers:a,body:o});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing json: ${t.message}`);throw new u("An unknown error occurred while uploading json")}},m=t=>new Promise(e=>{setTimeout(e,t)}),y=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");let a=[];i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/deleteFile"};let n="https://api.pinata.cloud/v3";for(let r of(t.endpointUrl&&(n=t.endpointUrl),e))try{let t=await fetch(`${n}/files/${r}`,{method:"DELETE",headers:i});if(await m(300),!t.ok){let e=await t.text();if(401===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}a.push({id:r,status:t.statusText})}catch(e){let t;t=e instanceof u?e.message:e instanceof Error?`Error deleting file ${r}: ${e.message}`:`An unknown error occurred while deleting file ${r}`,a.push({id:r,status:t})}return a},$=async(t,e)=>{if(!t)throw new p("Pinata configuration is missing");let i=new URLSearchParams;if(e){let{name:t,group:a,cid:n,order:r,limit:o,mimeType:s,pageToken:u,cidPending:c,metadata:h}=e;o&&i.append("limit",o.toString()),t&&i.append("name",t),a&&i.append("group",a),n&&i.append("cid",n),s&&i.append("mimeType",s),r&&i.append("order",r),u&&i.append("pageToken",u),c&&i.append("cidPending","true"),h&&"object"==typeof h&&Object.entries(h).forEach(([t,e])=>{i.append(`metadata[${t}]`,e.toString())})}let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);let n=`${a}/files?${i.toString()}`;try{let e;e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/listFiles"};let i=await fetch(n,{method:"GET",headers:e});if(!i.ok){let t=await i.text();if(401===i.status||403===i.status)throw new h(`Authentication failed: ${t}`,i.status,t);throw new c(`HTTP error: ${t}`,i.status,t)}return(await i.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing list files: ${t.message}`);throw new u("An unknown error occurred while listing files")}},k=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");if(!e.name&&(!e.keyvalues||0===Object.keys(e.keyvalues).length))throw new p("At least one of 'name' or 'keyvalues' must be provided");let a={};void 0!==e.name&&(a.name=e.name),e.keyvalues&&Object.keys(e.keyvalues).length>0&&(a.keyvalues=e.keyvalues);let n=JSON.stringify(a);i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateMetadata"};let r="https://api.pinata.cloud/v3";t.endpointUrl&&(r=t.endpointUrl);try{let t=await fetch(`${r}/files/${e.id}`,{method:"PUT",headers:i,body:n});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing updateFile: ${t.message}`);throw new u("An unknown error occurred while updating file")}},T=async(t,e,i)=>{let a;if(!t)throw new p("Pinata configuration is missing");let n=`${t?.pinataGateway}/files/${e}`,r=new URLSearchParams;i&&(i.width&&r.append("img-width",i.width.toString()),i.height&&r.append("img-height",i.height.toString()),i.dpr&&r.append("img-dpr",i.dpr.toString()),i.fit&&r.append("img-fit",i.fit),i.gravity&&r.append("img-gravity",i.gravity),i.quality&&r.append("img-quality",i.quality.toString()),i.format&&r.append("img-format",i.format),void 0!==i.animation&&r.append("img-anim",i.animation.toString()),i.sharpen&&r.append("img-sharpen",i.sharpen.toString()),!0===i.onError&&r.append("img-onerror","redirect"),i.metadata&&r.append("img-metadata",i.metadata));let o=r.toString();o&&(n+=`?${o}`);let s=JSON.stringify({url:n,date:Math.floor(new Date().getTime()/1e3),expires:30,method:"GET"}),d="https://api.pinata.cloud/v3";t.endpointUrl&&(d=t.endpointUrl),a=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/getCid"};let l=await fetch(`${d}/files/sign`,{method:"POST",headers:a,body:s}),w=await l.json();try{let t=await fetch(w.data);if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication Failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}let e=t.headers.get("content-type");return{data:e?.includes("application/json")?await t.json():e?.includes("text/")?await t.text():await t.blob(),contentType:e}}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing getCid: ${t.message}`);throw new u("An unknown error occurred while getting CID contents")}},A=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createKey"};let a=JSON.stringify(e),n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{let t=await fetch(`${n}/pinata/keys`,{method:"POST",headers:i,body:a});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing createKey: ${t.message}`);throw new u("An unknown error occurred while creating API key")}},P=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listKeys"};let a=new URLSearchParams;if(e){let{offset:t,name:i,revoked:n,limitedUse:r,exhausted:o}=e;t&&a.append("offset",t.toString()),void 0!==n&&a.append("revoked",n.toString()),void 0!==r&&a.append("limitedUse",r.toString()),void 0!==o&&a.append("exhausted",o.toString()),i&&a.append("name",i)}let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{let t=await fetch(`${n}/pinata/keys?${a.toString()}`,{method:"GET",headers:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).keys}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing listKeys: ${t.message}`);throw new u("An unknown error occurred while listing API keys")}},H=t=>new Promise(e=>{setTimeout(e,t)}),j=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");t.customHeaders&&Object.keys(t.customHeaders).length>0?(i={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders},i={...t.customHeaders}):i={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/revokeKeys"};let a=[],n="https://api.pinata.cloud/v3";for(let r of(t.endpointUrl&&(n=t.endpointUrl),e))try{let t=await fetch(`${n}/pinata/keys/${r}`,{method:"PUT",headers:i});if(await H(300),!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}let e=await t.json();a.push({key:r,status:e})}catch(e){let t;t=e instanceof u?e.message:e instanceof Error?`Error revoking key ${r}: ${e.message}`:`An unknown error occurred while revoking key ${r}`,a.push({key:r,status:t})}return a},S=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");let a=JSON.stringify({name:e.name,is_public:e.isPublic});i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createGroup"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{let t=await fetch(`${n}/files/groups`,{method:"POST",headers:i,body:a});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing createGroup: ${t.message}`);throw new u("An unknown error occurred while creating a group")}},E=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listGroups"};let a=new URLSearchParams;if(e){let{pageToken:t,name:i,limit:n,isPublic:r}=e;t&&a.append("pageToken",t.toString()),r&&a.append("isPublic",r.toString()),i&&a.append("name",i),void 0!==n&&a.append("limit",n.toString())}let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{let t=await fetch(`${n}/files/groups?${a.toString()}`,{method:"GET",headers:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing listGroups: ${t.message}`);throw new u("An unknown error occurred while listing groups")}},v=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getGroup"};let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);try{let t=await fetch(`${a}/files/groups/${e.groupId}`,{method:"GET",headers:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing getGroup: ${t.message}`);throw new u("An unknown error occurred while getting info for a group")}},C=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");let a=JSON.stringify({name:e.name,is_public:e.isPublic});i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateGroup"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{let t=await fetch(`${n}/files/groups/${e.groupId}`,{method:"PUT",headers:i,body:a});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing updateGroup: ${t.message}`);throw new u("An unknown error occurred while updating group")}},b=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");t.customHeaders&&Object.keys(t.customHeaders).length>0?(i={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders},i={...t.customHeaders}):i={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteGroup"};let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);try{let t=await fetch(`${a}/files/groups/${e.groupId}`,{method:"DELETE",headers:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return t.statusText}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing deleteGroup: ${t.message}`);throw new u("An unknown error occurred while deleting a group")}},U=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");let a=JSON.stringify({swap_cid:e.swapCid});i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapCid"};let n="https://api.pinata.cloud/v3";t.endpointUrl&&(n=t.endpointUrl);try{let t=await fetch(`${n}/files/swap/${e.cid}`,{method:"PUT",headers:i,body:a});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);if(403===t.status)throw new u("Unauthorized CID Swap",t.status,e);if(404===t.status)throw new u("CID not pinned to account",t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing CID Swap: ${t.message}`);throw new u("An unknown error occurred while swapping CID")}},x=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapHistory"};let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);try{let t=await fetch(`${a}/files/swap/${e.cid}?domain=${e.domain}`,{method:"GET",headers:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);if(404===t.status)throw new u("CID does not have history",t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error fetching swap history: ${t.message}`);throw new u("An unknown error occurred while fetching swap history")}},J=async(t,e)=>{let i;if(!t)throw new p("Pinata configuration is missing");i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteSwap"};let a="https://api.pinata.cloud/v3";t.endpointUrl&&(a=t.endpointUrl);try{let t=await fetch(`${a}/files/swap/${e}`,{method:"DELETE",headers:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication failed: ${e}`,t.status,e);if(403===t.status)throw new u("Unauthorized CID Swap Deletion",t.status,e);if(404===t.status)throw new u("CID not pinned to account",t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return t.statusText}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing deleteSwap: ${t.message}`);throw new u("An unknown error occurred while deleting swap")}},O=async(t,e,i)=>{let a,n;if(!t)throw new p("Pinata configuration is missing");a=e?.gateway?e.gateway.startsWith("https://")?e.gateway:`https://${e.gateway}`:t.pinataGateway;let r=`${a}/files/${e.cid}`,o=new URLSearchParams;i&&(i.width&&o.append("img-width",i.width.toString()),i.height&&o.append("img-height",i.height.toString()),i.dpr&&o.append("img-dpr",i.dpr.toString()),i.fit&&o.append("img-fit",i.fit),i.gravity&&o.append("img-gravity",i.gravity),i.quality&&o.append("img-quality",i.quality.toString()),i.format&&o.append("img-format",i.format),void 0!==i.animation&&o.append("img-anim",i.animation.toString()),i.sharpen&&o.append("img-sharpen",i.sharpen.toString()),!0===i.onError&&o.append("img-onerror","redirect"),i.metadata&&o.append("img-metadata",i.metadata));let s=o.toString();s&&(r+=`?${s}`);let d=JSON.stringify({url:r,date:e?.date||Math.floor(new Date().getTime()/1e3),expires:e.expires,method:"GET"}),l="https://api.pinata.cloud/v3";t.endpointUrl&&(l=t.endpointUrl),n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/createSignURL"};try{let t=await fetch(`${l}/files/sign`,{method:"POST",headers:n,body:d});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new h(`Authentication Failed: ${e}`,t.status,e);throw new c(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof u)throw t;if(t instanceof Error)throw new u(`Error processing createSignedURL: ${t.message}`);throw new u("An unknown error occurred while getting signed url")}},B=t=>{let e=t?.pinataGateway;return t&&e&&(e&&!e.startsWith("https://")&&(e=`https://${e}`),t.pinataGateway=e),t},z=class{constructor(t){this.config=B(t),this.files=new q(this.config),this.upload=new G(this.config),this.gateways=new _(this.config),this.keys=new R(this.config),this.groups=new K(this.config)}setNewHeaders(t){this.config||(this.config={pinataJwt:"",customHeaders:{}}),this.config.customHeaders={...this.config.customHeaders,...t},this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config)}setNewJwt(t){this.config||(this.config={pinataJwt:""}),this.config.pinataJwt=t,this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config)}testAuthentication(){return d(this.config)}},q=class{constructor(t){this.config=B(t)}updateConfig(t){this.config=t}list(){return new D(this.config)}delete(t){return y(this.config,t)}update(t){return k(this.config,t)}addSwap(t){return U(this.config,t)}getSwapHistory(t){return x(this.config,t)}deleteSwap(t){return J(this.config,t)}},I=class{constructor(t,e,...i){this.config=t,this.uploadFunction=e,this.args=i}addMetadata(t){return this.metadata=t,this}key(t){return this.keys=t,this}group(t){return this.groupId=t,this}then(t,e){let i=this.args[this.args.length-1]||{};return this.metadata&&(i.metadata=this.metadata),this.keys&&(i.keys=this.keys),this.groupId&&(i.groupId=this.groupId),this.args[this.args.length-1]=i,this.uploadFunction(this.config,...this.args).then(t,e)}},G=class{constructor(t){this.config=B(t)}updateConfig(t){this.config=t}file(t,e){return new I(this.config,l,t,e)}base64(t,e){return new I(this.config,w,t,e)}url(t,e){return new I(this.config,f,t,e)}json(t,e){return new I(this.config,g,t,e)}},D=class{constructor(t){this.query={},this.config=t}name(t){return this.query.name=t,this}group(t){return this.query.group=t,this}cid(t){return this.query.cid=t,this}mimeType(t){return this.query.mimeType=t,this}order(t){return this.query.order=t,this}limit(t){return this.query.limit=t,this}cidPending(t){return this.query.cidPending=t,this}metadata(t){return this.query.metadata=t,this}pageToken(t){return this.query.pageToken=t,this}then(t){return this.fetchPage().then(t)}async fetchPage(){this.currentPageToken&&(this.query.pageToken=this.currentPageToken);let t=await $(this.config,this.query);return this.currentPageToken=t.next_page_token,t}async *[Symbol.asyncIterator](){for(;;){for(let t of(await this.fetchPage()).files)yield t;if(!this.currentPageToken)break}}async all(){let t=[];for await(let e of this)t.push(e);return t}},_=class{constructor(t){this.config=B(t)}updateConfig(t){this.config=t}get(t){return new F(this.config,t)}createSignedURL(t){return new N(this.config,t)}},F=class{constructor(t,e){this.options={},this.config=t,this.cid=e}optimizeImage(t){return this.options={...this.options,...t},this}then(t){return T(this.config,this.cid,this.options).then(t)}},N=class{constructor(t,e){this.imgOpts={},this.config=t,this.urlOpts=e}optimizeImage(t){return this.imgOpts={...this.imgOpts,...t},this}then(t){return O(this.config,this.urlOpts,this.imgOpts).then(t)}},R=class{constructor(t){this.config=B(t)}updateConfig(t){this.config=t}create(t){return A(this.config,t)}list(){return new L(this.config)}revoke(t){return j(this.config,t)}},L=class{constructor(t){this.query={},this.config=t}offset(t){return this.query.offset=t,this}revoked(t){return this.query.revoked=t,this}limitedUse(t){return this.query.limitedUse=t,this}exhausted(t){return this.query.exhausted=t,this}name(t){return this.query.name=t,this}then(t){return P(this.config,this.query).then(t)}async *[Symbol.asyncIterator](){let t=!0,e=0;for(;t;){this.query.offset=e;let i=await P(this.config,this.query);for(let t of i)yield t;0===i.length?t=!1:e+=i.length}}async all(){let t=[];for await(let e of this)t.push(e);return t}},K=class{constructor(t){this.config=B(t)}updateConfig(t){this.config=t}create(t){return S(this.config,t)}list(){return new M(this.config)}get(t){return v(this.config,t)}update(t){return C(this.config,t)}delete(t){return b(this.config,t)}},M=class{constructor(t){this.query={},this.config=t}name(t){return this.query.name=t,this}limit(t){return this.query.limit=t,this}isPublic(t){return this.query.isPublic=t,this}pageToken(t){return this.query.pageToken=t,this}then(t){return this.fetchPage().then(t=>(this.nextPageToken=t.next_page_token,t)).then(t)}async fetchPage(){return this.nextPageToken&&(this.query.pageToken=this.nextPageToken),E(this.config,this.query)}async *[Symbol.asyncIterator](){for(;;){let t=await this.fetchPage();for(let e of t.groups)yield e;if(!t.next_page_token)break;this.nextPageToken=t.next_page_token}}async all(){let t=[];for await(let e of this)t.push(e);return t}};let W=new z({pinataJwt:`${process.env.PINATA_JWT}`,pinataGateway:"silver-legislative-kangaroo-260.mypinata.cloud"});async function V(t){return(await W.gateways.get(t)).data}async function X(t){try{let{cuid:e}=await t.json();if(console.log(e),!e)return s.NextResponse.json({error:"Cuid not provided"},{status:400});let i=await V(e);if(null==i)return s.NextResponse.json({error:"Invalid link"},{status:404});return s.NextResponse.json(i,{status:200})}catch(t){return console.error(t),s.NextResponse.json({error:"Internal Server Error"},{status:500})}}let Q=new n.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/getCertification/route",pathname:"/api/getCertification",filename:"route",bundlePath:"app/api/getCertification/route"},resolvedPagePath:"/Users/jayanthkoppala/Desktop/Developer/Credibly/app/api/getCertification/route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:Y,staticGenerationAsyncStorage:Z,serverHooks:tt}=Q,te="/api/getCertification/route";function ti(){return(0,o.patchFetch)({serverHooks:tt,staticGenerationAsyncStorage:Z})}}};var e=require("../../../webpack-runtime.js");e.C(t);var i=t=>e(e.s=t),a=e.X(0,[9379,4833],()=>i(44840));module.exports=a})();